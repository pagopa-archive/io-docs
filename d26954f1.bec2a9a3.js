(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{72:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return a})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return s}));var i=n(2),o=n(6),r=(n(0),n(78)),a={title:"How to setup CI/CD for a project"},c={unversionedId:"io-handbook/cicd-setup",id:"io-handbook/cicd-setup",isDocsHomePage:!1,title:"How to setup CI/CD for a project",description:"Context",source:"@site/docs/io-handbook/cicd-setup.md",slug:"/io-handbook/cicd-setup",permalink:"/io-docs/io-handbook/cicd-setup",editUrl:"https://github.com/pagopa/io-docs/edit/main/docs/io-handbook/cicd-setup.md",version:"current",sidebar:"docs",previous:{title:"Technology Radar",permalink:"/io-docs/io-handbook/technology-radar"},next:{title:"How to deploy",permalink:"/io-docs/io-handbook/how-to-deploy"}},p=[{value:"Context",id:"context",children:[]},{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Pipeline design tips",id:"pipeline-design-tips",children:[]},{value:"Create a pipeline",id:"create-a-pipeline",children:[]},{value:"Setup Github connection",id:"setup-github-connection",children:[{value:"Connections to read from the repository",id:"connections-to-read-from-the-repository",children:[]},{value:"Connections to push into the repository",id:"connections-to-push-into-the-repository",children:[]}]}],l={rightToc:p};function s(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(i.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"context"},"Context"),Object(r.b)("p",null,"This guide is intended for all tech team members that need to setup CI/CD automated pipelines for a project using ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"https://docs.microsoft.com/en-us/azure/devops/pipelines/?view=azure-devops"}),"Azure Pipelines"),"."),Object(r.b)("h2",{id:"prerequisites"},"Prerequisites"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"You have access to ",Object(r.b)("a",Object(i.a)({parentName:"li"},{href:"https://dev.azure.com/pagopa-io/"}),"Azure DevOps")," portal."),Object(r.b)("li",{parentName:"ul"},"A project linked to your application's codebase exists on Azure Devops.")),Object(r.b)("h2",{id:"pipeline-design-tips"},"Pipeline design tips"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Try to create one pipeline per scenario (code review, deploy, backup, etc) in order to keep each pipeline simple and linear"),Object(r.b)("li",{parentName:"ul"},"Place all the resources involved in the pipeline execution in a folder ",Object(r.b)("inlineCode",{parentName:"li"},".devops"),"."),Object(r.b)("li",{parentName:"ul"},"Group common tasks into templates to be shared between jobs of the same pipeline or of different pipelines."),Object(r.b)("li",{parentName:"ul"},"We have ",Object(r.b)("a",Object(i.a)({parentName:"li"},{href:"https://github.com/pagopa/azure-pipeline-templates"}),"a collection of common templates"),", use them and contribute back.")),Object(r.b)("h2",{id:"create-a-pipeline"},"Create a pipeline"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"On the application repo, create a yaml file in ",Object(r.b)("inlineCode",{parentName:"li"},".devops")," folder; name it ",Object(r.b)("inlineCode",{parentName:"li"},"pagopa.{project-name}.{pipeline-type}.yml")," (example: ",Object(r.b)("inlineCode",{parentName:"li"},"pagopa.io-docs.code-review.yml"),"); commit and push."),Object(r.b)("li",{parentName:"ul"},"On the Azure Devops project, select ",Object(r.b)("strong",{parentName:"li"},Object(r.b)("em",{parentName:"strong"},"New Pipeline > Github > select repository > Existing Azure Pipelines YAML file")),"; select the file you just created and press ",Object(r.b)("inlineCode",{parentName:"li"},"Continue"),"."),Object(r.b)("li",{parentName:"ul"},"Set pipeline variables, if needed."),Object(r.b)("li",{parentName:"ul"},"Rename the pipeline and press ",Object(r.b)("inlineCode",{parentName:"li"},"save"),".")),Object(r.b)("h2",{id:"setup-github-connection"},"Setup Github connection"),Object(r.b)("p",null,"In order to connect the pipeline to a Github repository, we must set a ",Object(r.b)("inlineCode",{parentName:"p"},"Service Connection")," in the project settings. "),Object(r.b)("h3",{id:"connections-to-read-from-the-repository"},"Connections to read from the repository"),Object(r.b)("p",null,"When creating the first pipeline of a project, a default service connection is created. This connection is of type ",Object(r.b)("inlineCode",{parentName:"p"},"GitHub (using azure pipelines app)"),", meaning it is linked to the ",Object(r.b)("inlineCode",{parentName:"p"},"Azure Pipelines")," Github App installed in the application repository; such app is installed along with the first pipeline, too (check ",Object(r.b)("em",{parentName:"p"},"settings/installations")," page on the repository).\nThis type of service connection is good enough for the pipeline to checkout code, perform checks and have results to be displayed directly in a pull request thread. "),Object(r.b)("h3",{id:"connections-to-push-into-the-repository"},"Connections to push into the repository"),Object(r.b)("p",null,"If your pipeline needs to push into the repository (example: create a commit or a tag), you need to set up a service connection of type ",Object(r.b)("inlineCode",{parentName:"p"},"GitHub (using oauth)"),". This kind of connection is related to a specific Github user and inherits its priviledges over the target repository.\nTo set up such service connection, go to ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("em",{parentName:"strong"},"Project settings > Service connections > New service connection")),". In the creation panel, do:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Select ",Object(r.b)("strong",{parentName:"li"},Object(r.b)("em",{parentName:"strong"},"Github")),"."),Object(r.b)("li",{parentName:"ol"},"Authentication method: ",Object(r.b)("inlineCode",{parentName:"li"},"Grant authorization"),"."),Object(r.b)("li",{parentName:"ol"},"OAuth configuration: ",Object(r.b)("inlineCode",{parentName:"li"},"AzurePipelines"),"."),Object(r.b)("li",{parentName:"ol"},"Click ",Object(r.b)("strong",{parentName:"li"},Object(r.b)("em",{parentName:"strong"},"Authorize"))," and grant the app via the OAuth protocol. Be careful to be logged ",Object(r.b)("em",{parentName:"li"},"as the user you want to associate the connection with"),"."),Object(r.b)("li",{parentName:"ol"},"Review the service connection name."),Object(r.b)("li",{parentName:"ol"},"Click ",Object(r.b)("strong",{parentName:"li"},Object(r.b)("em",{parentName:"strong"},"Save")),".")),Object(r.b)("p",null,"To associate this service connection to a pipeline:"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"Open the pipeline's edit page."),Object(r.b)("li",{parentName:"ol"},"Open the ",Object(r.b)("strong",{parentName:"li"},Object(r.b)("em",{parentName:"strong"},"Triggers"))," menu."),Object(r.b)("li",{parentName:"ol"},"Go to ",Object(r.b)("strong",{parentName:"li"},Object(r.b)("em",{parentName:"strong"},"YAML > Get sources")),"."),Object(r.b)("li",{parentName:"ol"},"Select the newly create service connection."),Object(r.b)("li",{parentName:"ol"},"Click ",Object(r.b)("strong",{parentName:"li"},Object(r.b)("em",{parentName:"strong"},"Save")),".")))}s.isMDXComponent=!0},78:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var i=n(0),o=n.n(i);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,o=function(e,t){if(null==e)return{};var n,i,o={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=o.a.createContext({}),s=function(e){var t=o.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=s(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,a=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),b=s(n),d=i,m=b["".concat(a,".").concat(d)]||b[d]||u[d]||r;return n?o.a.createElement(m,c(c({ref:t},l),{},{components:n})):o.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,a=new Array(r);a[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:i,a[1]=c;for(var l=2;l<r;l++)a[l]=n[l];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);